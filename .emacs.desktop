;; -*- mode: emacs-lisp; coding: emacs-mule; -*-
;; --------------------------------------------------------------------------
;; Desktop File for Emacs
;; --------------------------------------------------------------------------
;; Created Fri May 15 23:48:03 2015
;; Desktop file format version 206
;; Emacs version 24.5.1

;; Global section:
(setq desktop-saved-frameset [frameset 1 (21846 5427 449930 0) (desktop . "206") "huifengshuma@huifengshuma.local" nil nil ((((tty-type . "xterm-256color") (tty . "/dev/tty") (display-type . color) (background-mode . dark) (foreground-color . "#F8F8F2") (tool-bar-lines . 0) (background-color . "#1B1D1E") (cursor-color . "#F8F8F0") (font . "tty") (height . 21) (width . 158) (modeline . t) (unsplittable) (menu-bar-lines . 1) (frameset--id . "650B-D614-11A8-A47B") (frameset--mini t) (minibuffer . t)) ((min-height . 4) (min-width . 10) (min-height-ignore . 2) (min-width-ignore . 2) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 4) (min-pixel-width . 10) (min-pixel-height-ignore . 2) (min-pixel-width-ignore . 2) (min-pixel-height-safe . 1) (min-pixel-width-safe . 2)) leaf (pixel-width . 158) (pixel-height . 19) (total-width . 158) (total-height . 19) (normal-height . 1.0) (normal-width . 1.0) (buffer "Clojure.md" (selected . t) (hscroll . 0) (fringes 0 0 nil) (margins 3) (scroll-bars 0 0 t nil) (vscroll . 0) (dedicated) (point . 1050) (start . 940))))])
(setq extended-command-history '("cider-jack-in" "package-install" "package-refresh-contents" "org-edit-src-code" "run-python" "python-mode" "evil-insert-line" "auto-insert" "org-mode" "snippet-mode" "evil-visual-block" "emacs-lisp-byte-code-mode" "markdown-insert-code" "org-insert-drawer" "org-insert-subheading" "multi-term-dedicated-open" "eshell" "w3m"))
(setq file-name-history '("/Users/huifengshuma/Clojure/Clojure-Project/hello/src/hello/helloworld.clj" "~/.emacs.d/elpa/cider-0.8.2/cider-autoloads.el" "~/.emacs.d/elpa/pkg-info-0.5/pkg-info-autoloads.el" "~/.emacs.d/elpa/epl-0.7/epl-autoloads.el" "~/.emacs.d/elpa/queue-0.1.1/queue-autoloads.el" "~/.emacs.d/learing.clj" "~/Documents/My-wiki-baby/source/_posts/Clojure.md" "/Users/huifengshuma/Documents/My-wiki-baby/source/_posts/Emacs.md" "~/.emacs.d/elpa/clojure-mode-4.0.1/clojure-mode-autoloads.el" "~/Documents/org-doc/ToDo.org" "/Users/huifengshuma/Documents/org-doc/LaTex.org" "/Users/huifengshuma/Documents/My-wiki-baby/source/_posts/Clojure.md" "/Users/huifengshuma/Documents/org-doc/learing3.clj" "/Users/huifengshuma/Documents/org-doc/learing2.clj" "/Users/huifengshuma/Documents/org-doc/learing.clj" "/Users/huifengshuma/Documents/org-doc/ToDo.org" "/Users/huifengshuma/Documents/org-doc/test.py" "/Users/huifengshuma/Documents/org-doc/ToDo.org" "~/.clojure.clj" "/Users/huifengshuma/Documents/org-doc/ToDo.org" "~/Documents/My-wiki-baby/source/_posts/Clojure.md" "~/Documents/org-doc/ToDo.org" "/Users/huifengshuma/Documents/My-wiki-baby/source/_posts/Clojure.md" "/Users/huifengshuma/Documents/org-doc/ToDo.org" "/Users/huifengshuma/Documents/My-wiki-baby/source/_posts/iOS7-8.md" "/Users/huifengshuma/Documents/My-wiki-baby/source/_posts/Emacs.md" "/Users/huifengshuma/Documents/My-wiki-baby/source/_posts/Thinking.md" "~/Documents/My-wiki-baby/source/_posts/Clojure.md" "~/Documents/org-doc/test.py" "/Users/huifengshuma/Documents/My-wiki-baby/source/_posts/Task.md" "/Users/huifengshuma/Documents/My-wiki-baby/source/_posts/My-thinking-model.md" "/Users/huifengshuma/Documents/My-wiki-baby/source/_posts/Entrepreneurial-insight.md" "/Users/huifengshuma/Documents/My-wiki-baby/source/_posts/Thinking-in-languages.md" "/Users/huifengshuma/Documents/My-wiki-baby/source/_posts/Workflow.md" "~/Documents/My-wiki-baby/source/_posts/Matlab.md" "/Users/huifengshuma/Documents/org-doc/ToDo.org_archive" "~/Documents/My-wiki-baby/source/_posts/Entrepreneurial-insight.md" "~/Documents/org-doc/test.java" "~/Documents/My-wiki-baby/source/_posts/My-thinking-model.md" "/Users/huifengshuma/Documents/My-wiki-baby/source/_posts/bookmarks.md" "~/Documents/My-wiki-baby/source/_posts/Thinking.md" "/Users/huifengshuma/Documents/My-wiki-baby/source/_posts/UIKit.md" "~/Documents/My-wiki-baby/source/_posts/Docker.md" "~/Documents/My-wiki-baby/source/_posts/UIKit.md" "/Users/huifengshuma/Documents/My-wiki-baby/source/_posts/Linux.md" "~/Documents/My-wiki-baby/source/_posts/bookmarks.md" "/Users/huifengshuma/Documents/org-doc/‘¸ö‘Ìå‘Èí‘¼þ.org" "/Users/huifengshuma/Documents/GeeKraft/resources/Plugin/README.md" "~/Documents/My-wiki-baby/source/_posts/Emacs.md" "/Users/huifengshuma/Documents/org-doc/test.py" "/Users/huifengshuma/Documents/org-doc/python.org" "/Users/huifengshuma/Documents/My-wiki-baby/source/_posts/python.md" "~/Documents/My-wiki-baby/source/_posts/Github.md" "/Users/huifengshuma/Documents/org-doc/Matlab.org" "~/Documents/My-wiki-baby/source/_posts/Workflow.md" "~/ACM‘³Ì‘Ðò/test.c" "~/Documents/My-wiki-baby/source/_posts/Minecraft-command.md" "~/Project/Geekcraft/plugins/README.md" "~/Documents/org-doc/‘´ó‘Ñ§‘Îï‘Àí.org" "~/Documents/My-wiki-baby/source/_posts/Plan.md" "~/Documents/org-doc/‘Àë‘É¢‘Êý‘Ñ§.org" "~/Documents/My-wiki-baby/source/_posts/Core-Animation.md" "~/Documents/My-wiki-baby/source/_posts/Problem.md" "~/Documents/My-wiki-baby/source/_posts/Thinking-in-languages.md" "~/Documents/My-wiki-baby/source/_posts/Task.md" "~/MyPythonModel/HeadFirstPython/chapter3/openData.py" "~/Documents/org-doc/java.org" "~/MyPythonModel/HeadFirstPython/chapter3/test.py" "~/Documents/org-doc/test.c" "~/Documents/org-doc/python.org" "/Users/huifengshuma/Documents/org-doc/java.org" "/Users/huifengshuma/MyPythonModel/HeadFirstPython/chapter3/test.py" "/Users/huifengshuma/MyPythonModel/HeadFirstPython/chapter3/openData.py" "/Users/huifengshuma/Documents/My-wiki-baby/source/_posts/Design-Pattern.md" "/Users/huifengshuma/Documents/My-wiki-baby/source/_posts/Coding-Standards.md" "/Users/huifengshuma/Documents/My-wiki-baby/source/_posts/Core-Animation.md" "/Users/huifengshuma/Documents/org-doc/‘Àë‘É¢‘Êý‘Ñ§.org"))
(setq ido-last-directory-list '(("/Users/huifengshuma/MyPythonModel/HeadFirstPython/" . "chapter3/") ("/Users/huifengshuma/MyPythonModel/" . "HeadFirstPython/") ("/Users/huifengshuma/Project/Geekcraft/" . "plugins/") ("/Users/huifengshuma/Project/" . "Geekcraft/") ("/Users/huifengshuma/Documents/My-wiki-baby/source/" . "_posts/") ("/Users/huifengshuma/Documents/My-wiki-baby/" . "source/") ("/Users/huifengshuma/" . "MyPythonModel/") ("/Users/huifengshuma/Documents/" . "My-wiki-baby/")))
(setq ido-work-directory-list '("/Users/huifengshuma/Clojure/Clojure-Project/hello/src/hello/" "/Users/huifengshuma/Documents/My-wiki-baby/source/_posts/" "/Users/huifengshuma/Documents/org-doc/" "/Users/huifengshuma/MyPythonModel/HeadFirstPython/chapter3/" "/Users/huifengshuma/Project/Geekcraft/plugins/" "/Users/huifengshuma/.emacs.d/"))
(setq ido-work-file-list '("helloworld.clj" "bookmarks.md" "Think-after-reading.md" "MindNode.md" "Github.md" "Matlab.org" "python.org" "test.py" "java.org" "openData.py"))
(setq grep-history nil)
(setq compile-history nil)
(setq minibuffer-history '("cider" "pack" "refresh" "1+2" "python" "py" "a+1" "/usr/bin/python -i" "org-ed" "insert-" "insert" "org-ed" "org-edi" "ido-insert" "ido-in" "org-mo" "sni" "code" "block" "org-ed" "org-mode" "code" "insert" "org-insert" "org-edit" "python" "org-insert" "org-ed" "insert-bl" "org-insert" "python-mode" "python-" "py" "http://www.baidu.com" "w3m" "‘Ê¹‘ÓÃorg-mode‘×ö‘¸ö‘ÈË‘¹Ü‘Àí" "multi" "multi-term" "emacs‘ÎÄ‘¼þ‘µÄ‘Çé‘¿ö‘ÏÂ‘£¬‘Õâ‘Ð©‘Åä‘ÖÃ‘¾Í‘Ð´‘ÔÚinit" "list-packages" "‘Èç‘ºÎ‘ËÑ‘Ë÷‘Ïì‘Ó¦‘µÄ‘Åä‘ÖÃ‘ÎÄ‘¼þ‘£¬‘¸Ò‘½Ó‘¿ì‘Òª‘·³‘ËÀ‘ÁË" "‘°Ù‘¶È‘Ò»‘ÏÂ‘·½‘·¨" "‘Öª‘ºõ" "dsd" "ds" "ss" "http://www.baidu.com" "baidu" "el‘£º‘Õâ‘¸ö‘²å‘¼þ‘ÊÇ‘Ö¸‘ÔÚ‘Í¬‘Ò»‘¸ö‘±ê‘Ç©‘ÏÂ‘£¬‘±»‘·Ö‘¸ô‘³É‘²»‘Í¬‘µÄ‘´°‘¿Ú‘£¬‘È»‘ºó‘ÔÚ‘Ð´‘´°‘¿Ú‘½ç‘Ãæ‘½ø‘ÐÐ‘ÇÐ‘»»‘£¬‘±È‘Èç‘¿ª‘Æô‘ÁË‘ÖÕ‘¶Ë‘»ú‘µÄ‘´°‘¿Ú‘£¬‘È»‘ºó‘¾Í‘¿É‘ÒÔ‘²»‘ÓÃ‘°´‘ÏÂexit‘ÍË‘³ö‘ÖÕ‘¶Ë‘Ä£‘Ê½‘£¬‘¶ø‘ÊÇ‘Ö±‘½Ó‘¾Í‘¿É‘ÒÔ‘ÔÚmap‘Ä£‘Ê½‘Ö±‘½Ó‘Í¨‘¹ý‘¶º‘ºÅ‘¼Ó‘Êý‘×Ö‘µÄ‘ÐÎ‘Ê½‘À´‘½ø‘ÐÐ‘½ç‘Ãæ‘µÄ‘Ìø‘×ª" "w3m" "‘ÔÚmap‘Ä£‘Ê½‘ÏÂ‘£¬‘°´‘ÏÂ‘¶º‘ºÅ‘£¬‘ÔÙ‘°´‘ÏÂm‘¼ü‘»ò‘Õß‘ÊÇx‘¼ü‘¶¼‘»á‘ÓÐ‘Ïà‘Ó¦‘µÄ‘Ãü‘Áî‘Ìá‘Ê¾‘£¬‘Ïë‘Òª‘Ö´‘ÐÐ‘Ê²‘Ã´‘Ãü‘Áî‘¶¼‘¿É‘ÒÔ‘¸ù‘¾Ý‘À´‘Ö´‘ÐÐ‘£¬‘·Ç‘³£‘µÄ‘·½‘±ã" "w3m" "es"))
(setq query-replace-history nil)
(setq read-expression-history '("wq"))
(setq regexp-history nil)
(setq regexp-search-ring '("\\_<‘×î‘ºó‘É¾‘³ý‘µô‘ÁË‘ÓÃbrew‘°²‘×°‘µÄpyqt‘ÒÔ‘¼°pyqt5‘£¬‘Ñ¡‘Ôñ‘ÁË‘Ê¹‘ÓÃpip‘½ø‘ÐÐ‘ÖØ‘×°‘£¬‘ÖØ‘×°‘Ö®‘ºó‘ÎÊ‘Ìâ‘±ä‘³É‘ÁËqtcore‘ÕÒ‘²»‘µ½‘ÁË‘£¬‘Õâ‘µ½‘µ×‘ÊÇ‘Îª‘Ê²‘Ã´‘£¿‘ÎÒ‘Á¬python3‘¶¼‘ÒÑ‘¾­‘Ð¶‘ÔØ‘ÁË‘£¬‘»¹‘Ïë‘Òª‘ÎÒ‘Ôõ‘Ã´‘Ñù\\_>" "\\_<‘Ä¿‘Ç°‘×Ô‘¼º‘¾Í‘´¦‘ÓÚ‘Ò»‘ÖÖ‘ÔÚ‘Õû‘Àí‘µÄ‘×´‘¿ö‘£¬‘Çå‘Àí‘×Ô‘¼º‘ÔÚ‘¸÷‘¸ö‘·½‘Ãæ‘µÄ‘Öª‘Ê¶‘¿â‘£¬‘°Ñ‘×é‘Ö¯‘µ¼‘Í¼‘¸ø‘»­‘³ö‘À´‘£¬‘¿ª‘Ê¼‘Ö§‘Åä‘£¬‘¶ø‘²»‘ÔÙ‘ÊÇ‘»ì‘ÂÒ‘²»‘¿°\\_>" "\\_<c\\_>" "\\_<com/p/2671160410\\_>" "\\_<‘ÏÖ‘ÔÚ‘Òª‘ÎÒ‘ÖØ‘ÐÂ‘È¥‘Õû‘Àí‘Ê±‘¼ä‘¾Í‘Ì«‘Ã»‘ÓÐ‘±Ø‘Òª‘ÁË‘£¬‘ÎÒ‘Ö±‘½Ó‘¿´‘Ã÷‘Ìì‘ÉÏ‘Ê²‘Ã´‘¿É‘£¬‘¾Í‘È¥‘Ñ§‘Ï°‘Ê²‘Ã´‘£¬‘Èç‘¹û‘ÓÐ‘ºÜ‘¶à‘¿Î‘¾Í‘Æ½‘¾ù‘·Ö‘Åä‘Ê±‘¼ä\\_>" "\\_<com/100000PM/20010731\\_>" "\\_<‘Æä‘´Î‘ÊÇ‘×Ô‘¼º‘µÄ‘¼¼‘Êõ‘Ìá‘Éý‘ÎÊ‘Ìâ‘£¬‘Õâ‘¸ö‘Ñ§‘ÆÚ‘»ù‘±¾‘Ê²‘Ã´‘¶¼‘Ã»‘ÓÐ‘¸É‘£¬‘ºÜ‘¶à‘Éè‘Á¢‘ÏÂ‘À´‘µÄ‘Ä¿‘±ê‘¶¼‘Ã»‘ÓÐ‘»¨‘Ê±‘¼ä‘È¥‘Êµ‘ÏÖ‘£¬‘ÏÖ‘ÔÚ‘ÔÚ‘¼æ‘¹Ë‘Ñ§‘Òµ‘µÄ‘»ù‘´¡‘ÉÏ‘Òª‘°Ñ‘×Ô‘¼º‘µÄ‘¸÷‘¸ö‘Ö¸‘±ê‘¶¼‘¸ã‘ÉÏ‘È¥‘²Å‘¿É‘ÒÔ‘£¬‘Õâ‘²Å‘ÊÇ‘ÎÒ‘Ïë‘Òª‘µÄ‘´ó‘Ñ§‘Éú‘»î‘²Å‘¶Ô‘£¬‘¶ø‘²»‘ÊÇ‘Ïñ‘ÏÖ‘ÔÚ‘Õâ‘Ñù‘Èç‘´Ë‘µÄ‘Ëæ‘ÐÄ‘Ëù‘Óû‘£¬‘¸Ã‘×ö‘µÄ‘ÊÂ‘Çé‘¶¼‘²»‘È¥‘×ö‘ºÃ‘£¬‘¼Æ‘»®‘¼Æ‘»®‘£¬‘ÑÏ‘¸ñ‘µÄ‘È¥‘Ö´‘ÐÐ‘×Ô‘¼º‘µÄ‘¼Æ‘»®‘£¬‘¾¡‘¿ì‘ÕÒ‘µ½‘·û‘ºÏ‘×Ô‘¼º‘µÄ‘ÐÐ‘¶¯‘Ä£‘Ê½‘²Å‘¿É‘ÒÔ‘£¬‘Õâ‘¼Æ‘»®‘×Ô‘¼º‘¶¼‘ÒÑ‘¾­‘²»‘Öª‘µÀ‘Ëµ‘ÁË‘¶à‘ÉÙ‘±é‘ÁË‘£¬‘×Ô‘¼º‘¶¼‘Òª‘±»‘×Ô‘¼º‘¸ø‘·³‘ËÀ‘ÁË‘£¬‘Í´‘ÏÂ‘¾ö‘ÐÄ‘Òª‘½ø‘ÐÐ‘¸Ä‘¸ï‘²Å‘¿É‘ÒÔ\\_>" "\\_<‘¹¤‘×÷‘Ð§‘ÂÊ‘·Ç‘³£‘µ×‘ÏÂ‘µÄ‘Ò»‘µã‘¾Í‘ÊÇ‘×Ô‘¼º‘µÄ‘Ã»‘ÓÐ‘¼Æ‘»®‘µÄ‘¹¤‘×÷‘£¬‘ÓÐ‘¼Æ‘»®‘µÄ‘¹¤‘×÷‘Ò²‘²»‘ÄÜ‘¹»‘¼á‘¾ö‘µÄ‘È¥‘Ö´‘ÐÐ‘£¬‘Êµ‘ÔÚ‘ÊÇ‘·Ç‘³£‘µÄ‘Ôã‘¸â‘£¬‘ÏÖ‘ÔÚ‘±Ø‘Ðë‘Òª‘Á¢‘¿Ì‘½â‘¾ö‘Õâ‘Ñù‘µÄ‘Çé‘¿ö‘²Å‘¿É‘£¬‘·ñ‘Ôò‘Õæ‘ÐÄ‘»á‘ËÀ‘ÈË\\_>" "\\_<‘Èç‘ºÎ‘ÏÖ‘ÔÚ‘ÔÚ‘×ê‘ÑÐ‘µÄ‘ÎÊ‘Ìâ‘²»‘ÊÇ‘µ±‘Ç°‘Òª‘ÑÐ‘¾¿‘µÄ‘ÖØ‘µã‘£¬‘ÄÇ‘Ã´‘¾Í‘Òª‘°Ñ‘¶È‘¸ø‘ÕÆ‘ÎÕ‘ºÃ‘£¬‘¸Ã‘·Å‘ÊÖ‘¾Í‘·Å‘ÊÖ‘£¬‘»Ø‘µ½‘Õý‘¹ì‘ÉÏ‘È¥‘½â‘¾ö‘µ±‘Ç°‘µÄ‘ÖØ‘µã‘ÎÊ‘Ìâ‘£¬‘¶ø‘²»‘ÊÇ‘×ê‘µ½‘Å£‘½Ç‘¼â‘Àï‘Ãæ‘ÎÞ‘·¨‘×Ô‘°Î\\_>" "\\_<‘¹¤‘×÷‘Ð§‘ÂÊ‘·Ç‘³£‘µ×‘ÏÂ‘µÄ‘Ò»‘µã‘¾Í‘ÊÇ‘×Ô‘¼º‘µÄ‘Ã»‘ÓÐ‘¼Æ‘»®‘µÄ‘¹¤‘×÷‘£¬‘ÓÐ‘¼Æ‘»®‘µÄ‘¹¤‘×÷‘Ò²‘²»‘ÄÜ‘¹»‘¼á‘¾ö‘µÄ‘È¥‘Ö´‘ÐÐ‘£¬‘Êµ‘ÔÚ‘ÊÇ‘·Ç‘³£‘µÄ‘Ôã‘¸â‘£¬‘ÏÖ‘ÔÚ‘±Ø‘Ðë‘Òª‘Á¢‘¿Ì‘½â‘¾ö‘Õâ‘Ñù‘µÄ‘Çé‘¿ö‘²Å‘¿É‘£¬‘·ñ‘Ôò‘Õæ‘ÐÄ‘»á‘ËÀ‘ÈË\\_>" "\\_<‘Áí‘Íâ‘×Ô‘¼º‘Ã»‘´Î‘È¥‘×ö‘Ä³‘Ò»‘Ñù‘¸´‘ÔÓ‘µÄ‘Åä‘ÖÃ‘µÄ‘Ê±‘ºò‘£¬‘¶¼‘Ó¦‘¸Ã‘Òª‘Ï°‘¹ß‘ÐÔ‘µÄ‘È¥‘Ð´‘Ò»‘ÏÂ‘Åä‘ÖÃ‘ÈÕ‘Ö¾‘²Å‘¿É‘ÒÔ‘£¬‘Õâ‘Ñù‘¿É‘ÒÔ‘ºÜ‘´ó‘³Ì‘¶È‘ÉÏ‘Ìá‘¸ß‘×Ô‘¼º‘µÄ‘¹¤‘×÷‘ÈÕ‘Ö¾‘£¬‘¾Í‘Ïñ‘Õâ‘´Î‘Åä‘ÖÃwebkit‘Ò»‘Ñù‘£¬‘¾Í‘Ó¦‘¸Ã‘Ð´‘Ò»‘ÏÂwebkit‘À´‘½ø‘ÐÐ‘¸ú‘×Ù‘¼Ç‘Â¼‘²Å‘¿É‘ÒÔ\\_>" "\\_<w3m‘£ºemacs‘ÄÚ‘ÖÃ‘µÄ‘ä¯‘ÀÀ‘Æ÷‘£¬‘·Ç‘³£‘µÄ‘²»‘´í‘£¬‘¿É‘ÒÔ‘ÓÃ‘À´‘×ö‘¼ò‘µ¥‘µÄ‘Íø‘Ò³‘ä¯‘ÀÀ‘£¬‘Èç‘¹û‘¿É‘ÒÔ‘ÔÚ‘Í¬‘Ò»‘¸ö‘ÆÁ‘Ä»‘ÏÂ‘À´‘¸ã‘¶¨‘¾Í‘Ì«‘·½‘±ã‘ÁË‘£»w3m‘Ò²‘ÓÐ‘Ò»‘´ó‘¶Ñ‘µÄ‘¿ì‘½Ý‘¼ü‘ÊÇ‘Ðè‘Òª‘½ø‘ÐÐ‘Ñ§‘Ï°‘µÄ‘£¬‘Ñ§‘»á‘ÔÚ‘µ±‘Ç°‘´°‘¿Ú‘´ò‘¿ªw3m‘£¬‘²¢‘ÇÒ‘½ø‘ÐÐ‘ä¯‘ÀÀ‘£¬‘ÔÚw3m‘ÏÂ‘Ò»‘¸ö‘£¬vim‘ÏÂ‘µÄ‘¿ì‘½Ý‘¼ü‘»¹‘ÊÇ‘ºÜ‘²»‘Ï°‘¹ß‘£¬‘»¹‘Òª‘»¨‘ÉÏ‘²»‘ÉÙ‘µÄ‘Ê±‘¼ä‘²Å‘ÄÜ‘¹»‘ÊÊ‘Ó¦‘£»‘Áí‘Íâw3m‘µÄ‘½ç‘Ãæ‘Ì«‘µ°‘ÌÛ‘ÁË‘£¬‘Ã»‘ÓÐ‘ÈÎ‘ºÎ‘µÄ‘Ñù‘Ê½‘£¬‘Õâ‘Ñù‘·Ç‘³£‘²»‘·½‘±ã‘½ø‘ÐÐ‘ä¯‘ÀÀ‘£¬‘¶ø‘ÇÒ‘Ä¬‘ÈÏ‘µÄ‘²Ù‘×÷‘Êµ‘ÔÚ‘ÊÇ‘Ì«‘µ°‘ÌÛ‘ÁË‘£¬‘¼ò‘Ö±‘²»‘ÄÜ‘ÓÃ‘£¬‘ÑÐ‘¾¿‘Ò»‘ÏÂ‘Ôõ‘Ã´‘Ê¹‘ÓÃwebkit‘£¬‘°Ñ‘×Ô‘¼º‘µÄemacs‘ÔÙ‘×ö‘Ò»‘´Î‘Ç¿‘»¯\\_>"))
(setq search-ring '("##" "‘¼¯‘ºÏ" "a" "let" "‘ÈÝ‘Æ÷" "let" "()" "bing" "if" "‘¶¨‘Òå" "ve" "‘º¯‘Êý" "def" "‘±ê‘Ê¶‘·û‘¡£" "‘Óï‘·¨‘ÌÇ" "‘º¯‘Êý"))
(setq comint-input-ring nil)
(setq shell-command-history nil)
(setq desktop-missing-file-warning nil)
(setq register-alist '((97) (119) (113) (48 . "- ‘µÚ‘Èý‘¸ö‘Óö‘µ½‘µÄ‘¿Ó‘¾Í‘ÊÇ‘µ¼‘Èëpqrt5‘µÄ‘Ê±‘ºò‘³ö‘ÏÖ‘ÎÊ‘Ìâ‘£¬‘ÎÒ‘¼ò‘Ö±‘Òª‘·è‘ÁË‘£¬‘µ«‘ÊÇ‘ÔÚ‘¼«‘´ó‘µØ‘ºÃ‘Ææ‘ÐÄ‘µÄ‘Çý‘¶¯‘ÏÂ‘£¬‘ÎÒ‘»¹‘ÊÇ‘ÈÌ‘²»‘×¡‘¼Ì‘Ðø‘ÏÂ‘È¥‘£¬‘ÔÚstackoverflow‘ÉÏ‘ÕÒ‘µ½‘µÄ‘½â‘¾ö‘·½‘°¸‘ÊÇ‘É¾‘³ýpython‘Óëpyqt‘£¬‘Ê¹‘ÓÃmacports‘½ø‘ÐÐ‘°²‘×°‘£¬‘ÓÚ‘ÊÇ‘ÎÒ‘·¢‘ÏÖ‘Ô­‘À´‘³ý‘ÁËhomebrew‘£¬‘»¹‘ÓÐ‘Ò»‘¸ö‘°ü‘¹Ü‘Àí‘¹¤‘¾ß‘½Ðmacports‘£¬‘ËÑ‘Ë÷‘ÁË‘Ò»‘ÏÂmacports‘Óëhomebrew‘µÄ‘±È‘½Ï‘£¬‘·¢‘ÏÖ‘Ê¹‘ÓÃmacport‘À´‘°²‘×°‘°ü‘¿É‘ÒÔ‘¼õ‘ÉÙ‘¶Ô‘Ïµ‘Í³‘µÄ‘ÒÀ‘Àµ‘£¬‘ÓÚ‘ÊÇ‘ÎÒ‘¾ö‘¶¨‘³¢‘ÊÔ‘Ò»‘ÏÂ‘£¬‘µ«‘ÊÇ‘Òª‘ÏÈ‘É¾‘³ý‘Ïµ‘Í³‘×Ô‘´ø‘µÄpython‘£¬‘»¹‘ÊÇ‘ÓÐ‘²»‘ÉÙ‘·ç‘ÏÕ‘µÄ‘£¬‘Ëù‘ÒÔ‘ÎÒ‘ÏÈ‘±¸‘·Ý‘ÁË‘Ò»‘ÏÂ‘Ïµ‘Í³‘£¬\n")))

;; Buffer section -- buffers listed in same order as in buffer list:
(desktop-create-buffer 206
  "/Users/huifengshuma/Documents/My-wiki-baby/source/_posts/Clojure.md"
  "Clojure.md"
  'markdown-mode
  '(flx-ido-mode git-gutter-mode linum-mode undo-tree-mode evil-escape-mode guide-key-mode company-mode global-auto-revert-mode pointback-mode yas-minor-mode)
  1050
  '(6175 nil)
  nil
  nil
  '((tab-width . 4) (buffer-file-coding-system . utf-8-unix) (overwrite-mode)))

(desktop-create-buffer 206
  "/Users/huifengshuma/Clojure/Clojure-Project/hello/src/hello/hello.clj"
  "hello.clj"
  'clojure-mode
  '(flx-ido-mode git-gutter-mode linum-mode undo-tree-mode evil-escape-mode guide-key-mode company-mode global-auto-revert-mode pointback-mode fic-mode subword-mode eldoc-mode cider-mode)
  191
  '(nil nil)
  nil
  nil
  '((show-trailing-whitespace . t) (indent-tabs-mode) (buffer-file-coding-system . utf-8-unix)))

(desktop-create-buffer 206
  "/Users/huifengshuma/Clojure/Clojure-Project/hello/src/hello/core.clj"
  "core.clj"
  'clojure-mode
  '(flx-ido-mode git-gutter-mode linum-mode undo-tree-mode evil-escape-mode guide-key-mode company-mode global-auto-revert-mode pointback-mode yas-minor-mode fic-mode subword-mode eldoc-mode cider-mode)
  93
  '(nil nil)
  nil
  nil
  '((show-trailing-whitespace . t) (indent-tabs-mode) (buffer-file-coding-system . undecided-unix)))

(desktop-create-buffer 206
  "/Users/huifengshuma/Clojure/Clojure-Project/hello/project.clj"
  "project.clj"
  'clojure-mode
  '(flx-ido-mode git-gutter-mode linum-mode undo-tree-mode evil-escape-mode guide-key-mode company-mode global-auto-revert-mode pointback-mode yas-minor-mode fic-mode subword-mode eldoc-mode cider-mode)
  344
  '(nil nil)
  nil
  nil
  '((show-trailing-whitespace . t) (indent-tabs-mode) (buffer-file-coding-system . utf-8-unix) (overwrite-mode)))

(desktop-create-buffer 206
  "/Users/huifengshuma/.lein/profiles.clj"
  "profiles.clj"
  'clojure-mode
  '(flx-ido-mode git-gutter-mode linum-mode undo-tree-mode evil-escape-mode guide-key-mode company-mode global-auto-revert-mode pointback-mode yas-minor-mode fic-mode subword-mode eldoc-mode cider-mode)
  211
  '(nil nil)
  nil
  nil
  '((show-trailing-whitespace . t) (indent-tabs-mode) (buffer-file-coding-system . undecided-unix) (overwrite-mode)))

(desktop-create-buffer 206
  "/Users/huifengshuma/Documents/My-wiki-baby/source/_posts/Task.md"
  "Task.md"
  'markdown-mode
  '(flx-ido-mode git-gutter-mode linum-mode undo-tree-mode evil-escape-mode guide-key-mode company-mode global-auto-revert-mode pointback-mode yas-minor-mode)
  1547
  '(1565 nil)
  nil
  nil
  '((tab-width . 4) (buffer-file-coding-system . utf-8-unix) (overwrite-mode)))

(desktop-create-buffer 206
  "/Users/huifengshuma/Documents/My-wiki-baby/source/_posts/Think-after-reading.md"
  "Think-after-reading.md"
  'markdown-mode
  '(flx-ido-mode git-gutter-mode linum-mode undo-tree-mode evil-escape-mode guide-key-mode company-mode global-auto-revert-mode pointback-mode yas-minor-mode)
  1
  '(nil nil)
  nil
  nil
  '((tab-width . 4) (buffer-file-coding-system . utf-8-unix)))

(desktop-create-buffer 206
  "/Users/huifengshuma/Documents/My-wiki-baby/source/_posts/My-thinking-model.md"
  "My-thinking-model.md"
  'markdown-mode
  '(flx-ido-mode git-gutter-mode linum-mode undo-tree-mode evil-escape-mode guide-key-mode company-mode global-auto-revert-mode pointback-mode yas-minor-mode)
  2056
  '(1264 nil)
  nil
  nil
  '((tab-width . 4) (buffer-file-coding-system . utf-8-unix) (overwrite-mode)))

(desktop-create-buffer 206
  "/Users/huifengshuma/Documents/org-doc/ToDo.org"
  "ToDo.org"
  'org-mode
  '(flx-ido-mode git-gutter-mode undo-tree-mode evil-escape-mode guide-key-mode company-mode global-auto-revert-mode pointback-mode yas-minor-mode page-break-lines-mode)
  888
  '(nil nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix) (overwrite-mode) (truncate-lines)))

(desktop-create-buffer 206
  "/Users/huifengshuma/Documents/My-wiki-baby/source/_posts/Github.md"
  "Github.md"
  'markdown-mode
  '(flx-ido-mode git-gutter-mode linum-mode undo-tree-mode evil-escape-mode guide-key-mode company-mode global-auto-revert-mode pointback-mode yas-minor-mode)
  185
  '(nil nil)
  nil
  nil
  '((tab-width . 4) (buffer-file-coding-system . utf-8-unix)))

(desktop-create-buffer 206
  "/Users/huifengshuma/Documents/My-wiki-baby/source/_posts/Workflow.md"
  "Workflow.md"
  'markdown-mode
  '(flx-ido-mode git-gutter-mode linum-mode undo-tree-mode evil-escape-mode guide-key-mode company-mode global-auto-revert-mode pointback-mode yas-minor-mode)
  1524
  '(1523 nil)
  nil
  nil
  '((tab-width . 4) (buffer-file-coding-system . utf-8-unix) (overwrite-mode)))

(desktop-create-buffer 206
  "/Users/huifengshuma/Documents/org-doc/Matlab.org"
  "Matlab.org"
  'org-mode
  '(flx-ido-mode git-gutter-mode undo-tree-mode evil-escape-mode guide-key-mode company-mode global-auto-revert-mode pointback-mode yas-minor-mode page-break-lines-mode)
  100
  '(1 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix) (overwrite-mode) (truncate-lines)))

(desktop-create-buffer 206
  "/Users/huifengshuma/Documents/My-wiki-baby/source/_posts/Plan.md"
  "Plan.md"
  'markdown-mode
  '(flx-ido-mode git-gutter-mode linum-mode undo-tree-mode evil-escape-mode guide-key-mode company-mode global-auto-revert-mode pointback-mode yas-minor-mode)
  805
  '(756 nil)
  nil
  nil
  '((tab-width . 4) (buffer-file-coding-system . utf-8-unix) (overwrite-mode)))

(desktop-create-buffer 206
  "/Users/huifengshuma/Documents/org-doc/python.org"
  "python.org"
  'org-mode
  '(flx-ido-mode git-gutter-mode undo-tree-mode evil-escape-mode guide-key-mode company-mode global-auto-revert-mode pointback-mode yas-minor-mode page-break-lines-mode)
  1548
  '(1507 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix) (overwrite-mode) (truncate-lines)))

(desktop-create-buffer 206
  "/Users/huifengshuma/Documents/org-doc/test.py"
  "test.py"
  'python-mode
  '(flx-ido-mode git-gutter-mode linum-mode undo-tree-mode evil-escape-mode guide-key-mode company-mode global-auto-revert-mode pointback-mode yas-minor-mode fic-mode subword-mode eldoc-mode anaconda-mode)
  31
  '(31 nil)
  nil
  nil
  '((show-trailing-whitespace . t) (tab-width . 8) (indent-tabs-mode) (buffer-file-coding-system . undecided-unix) (overwrite-mode)))

(desktop-create-buffer 206
  "/Users/huifengshuma/Documents/org-doc/java.org"
  "java.org"
  'org-mode
  '(flx-ido-mode git-gutter-mode undo-tree-mode evil-escape-mode guide-key-mode company-mode global-auto-revert-mode pointback-mode yas-minor-mode page-break-lines-mode)
  7
  '(215 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix) (overwrite-mode) (truncate-lines)))

(desktop-create-buffer 206
  "/Users/huifengshuma/MyPythonModel/HeadFirstPython/chapter3/openData.py"
  "openData.py"
  'python-mode
  '(flx-ido-mode git-gutter-mode linum-mode undo-tree-mode evil-escape-mode guide-key-mode company-mode global-auto-revert-mode pointback-mode yas-minor-mode fic-mode subword-mode eldoc-mode anaconda-mode)
  32
  '(nil nil)
  nil
  nil
  '((show-trailing-whitespace . t) (tab-width . 8) (indent-tabs-mode) (buffer-file-coding-system . undecided-unix) (overwrite-mode)))

(desktop-create-buffer 206
  "/Users/huifengshuma/Documents/My-wiki-baby/source/_posts/Problem.md"
  "Problem.md"
  'markdown-mode
  '(flx-ido-mode git-gutter-mode linum-mode undo-tree-mode evil-escape-mode guide-key-mode company-mode global-auto-revert-mode pointback-mode yas-minor-mode)
  935
  '(1290 t)
  nil
  nil
  '((tab-width . 4) (buffer-file-coding-system . utf-8-unix) (overwrite-mode)))

(desktop-create-buffer 206
  "/Users/huifengshuma/Documents/My-wiki-baby/source/_posts/Core-Animation.md"
  "Core-Animation.md"
  'markdown-mode
  '(flx-ido-mode git-gutter-mode linum-mode undo-tree-mode evil-escape-mode guide-key-mode company-mode global-auto-revert-mode pointback-mode yas-minor-mode)
  49
  '(nil nil)
  nil
  nil
  '((tab-width . 4) (buffer-file-coding-system . undecided-unix)))

(desktop-create-buffer 206
  "/Users/huifengshuma/Documents/org-doc/‘Àë‘É¢‘Êý‘Ñ§.org"
  "‘Àë‘É¢‘Êý‘Ñ§.org"
  'org-mode
  '(flx-ido-mode git-gutter-mode undo-tree-mode evil-escape-mode guide-key-mode company-mode global-auto-revert-mode pointback-mode yas-minor-mode page-break-lines-mode)
  35
  '(nil nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix) (truncate-lines)))

(desktop-create-buffer 206
  "/Users/huifengshuma/Documents/org-doc/‘´ó‘Ñ§‘Îï‘Àí.org"
  "‘´ó‘Ñ§‘Îï‘Àí.org"
  'org-mode
  '(flx-ido-mode git-gutter-mode undo-tree-mode evil-escape-mode guide-key-mode company-mode global-auto-revert-mode pointback-mode yas-minor-mode page-break-lines-mode)
  515
  '(48 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix) (overwrite-mode) (truncate-lines)))

(desktop-create-buffer 206
  "/Users/huifengshuma/Documents/My-wiki-baby/source/_posts/Minecraft-command.md"
  "Minecraft-command.md"
  'markdown-mode
  '(flx-ido-mode git-gutter-mode linum-mode undo-tree-mode evil-escape-mode guide-key-mode company-mode global-auto-revert-mode pointback-mode yas-minor-mode)
  349
  '(nil nil)
  nil
  nil
  '((tab-width . 4) (buffer-file-coding-system . utf-8-unix) (overwrite-mode)))

(desktop-create-buffer 206
  "/Users/huifengshuma/Documents/My-wiki-baby/source/_posts/Emacs.md"
  "Emacs.md"
  'markdown-mode
  '(flx-ido-mode git-gutter-mode linum-mode undo-tree-mode evil-escape-mode guide-key-mode company-mode global-auto-revert-mode pointback-mode yas-minor-mode)
  10641
  '(10287 nil)
  nil
  nil
  '((tab-width . 4) (buffer-file-coding-system . utf-8-unix) (overwrite-mode)))

(desktop-create-buffer 206
  "/Users/huifengshuma/ACM‘³Ì‘Ðò/test.c"
  "test.c"
  'c-mode
  '(abbrev-mode flx-ido-mode git-gutter-mode linum-mode undo-tree-mode evil-escape-mode guide-key-mode company-mode global-auto-revert-mode pointback-mode yas-minor-mode fic-mode subword-mode eldoc-mode ggtags-mode)
  462
  '(nil nil)
  nil
  nil
  '((show-trailing-whitespace . t) (buffer-file-coding-system . undecided-unix) (overwrite-mode)))

(desktop-create-buffer 206
  "/Users/huifengshuma/Documents/My-wiki-baby/source/_posts/Thinking-in-languages.md"
  "Thinking-in-languages.md"
  'markdown-mode
  '(flx-ido-mode git-gutter-mode linum-mode undo-tree-mode evil-escape-mode guide-key-mode company-mode global-auto-revert-mode pointback-mode yas-minor-mode)
  4731
  '(4814 nil)
  nil
  nil
  '((tab-width . 4) (buffer-file-coding-system . utf-8-unix) (overwrite-mode)))

