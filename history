;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(w3m-input-url-history w3m-bookmark-title-history w3m-bookmark-section-history minibuffer-history evil-ex-history ido-buffer-history ido-file-history))
(setq w3m-input-url-history '("w3m配置修改" "百度" "www.baidu.com" "http://www.google.com.au/search?q=baidu..."))
(setq w3m-bookmark-title-history '("www.google.com.au"))
(setq w3m-bookmark-section-history '("www.baidu.com"))
(setq minibuffer-history '(#("使用org-mode做个人管理" 0 15 (fontified t)) "multi" "multi-term" #("emacs文件的情况下，这些配置就写在init" 0 23 (fontified t)) "list-packages" "如何搜索响应的配置文件，敢接快要烦死了" "百度一下方法" "知乎" "dsd" "ds" "ss" "http://www.baidu.com" "baidu" #("el：这个插件是指在同一个标签下，被分隔成不同的窗口，然后在写窗口界面进行切换，比如开启了终端机的窗口，然后就可以不用按下exit退出终端模式，而是直接就可以在map模式直接通过逗号加数字的形式来进行界面的跳转" 0 103 (fontified t) 103 104 (fontified t) 104 105 (fontified t)) "w3m" #("在map模式下，按下逗号，再按下m键或者是x键都会有相应的命令提示，想要执行什么命令都可以根据来执行，非常的方便" 0 56 (fontified t)) "w3m" "es"))
(setq evil-ex-history '(#(";非常不错的配置文件，没有颜色主题的错误，非常的好用，而且配置很对我的胃口" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29) 29 30 (ex-index 30) 30 31 (ex-index 31) 31 32 (ex-index 32) 32 33 (ex-index 33) 33 34 (ex-index 34) 34 35 (ex-index 35) 35 36 (ex-index 36) 36 37 (ex-index 37))))
(setq ido-buffer-history '(".emacs" "*terminal<1>*" "*eshell*" "*Packages*" "*w3m*" "bookmark.html" "Emacs.md" "test.c" "Emacs.md" "*w3m*" "Emacs.md" "*w3m*" "*eshell*" "Task.md" "Thinking.md" "init.el" "Emacs.md" "Thinking.md" "Task.md" "Vim.md" "test.c" "init.el" "Vim.md" "Task.md" "*eshell*"))
(setq ido-file-history '(".emacs" "Thinking.md" "Task.md" "init.el" "test.c" "Vim.md" "Task.md" "Thinking.md" "Task.md" "test.c"))
(setq search-ring '("快捷" "配置"))
(setq regexp-search-ring 'nil)
(setq kill-ring '(#("  - 目前的配" 0 2 (fontified t) 2 3 (fontified t face markdown-list-face) 3 8 (fontified t)) #("已经是厉害到没朋友了，实在是太牛逼了，我可以在" 0 23 (fontified t)) #("现在只要把快速打开终端机的模式以及" 0 17 (fontified t)) #("下" 0 1 (fontified t)) #("口" 0 1 (fontified t)) #("换" 0 1 (fontified t)) "" #("<!-- - 了解基本的快捷方式 -->
" 0 5 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 5 6 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 6 16 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 16 20 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 20 21 (yank-handler (evil-yank-line-handler) fontified t)) #("- 了解基本的快捷方式
" 0 1 (yank-handler (evil-yank-line-handler) fontified t face markdown-list-face) 1 11 (yank-handler (evil-yank-line-handler) fontified t) 11 12 (yank-handler (evil-yank-line-handler) fontified t)) #("<!-- - 了解基本的快捷方式 -->
" 0 5 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 5 6 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 6 16 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 16 20 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 20 21 (yank-handler (evil-yank-line-handler) fontified t)) #("- 了解基本的快捷方式
" 0 1 (yank-handler (evil-yank-line-handler) fontified t face markdown-list-face) 1 12 (yank-handler (evil-yank-line-handler) fontified t)) #("- 突然觉得这个配置已经强大到了让我觉得再去修改就有点多余了，最多再添加几个自己需要自动补全的语言进去便可
- 先暂时不急着修改这个配置，让我先把这个配置安装的插件给研究清楚先，看一下是否有存在同类的插件，然后再来加上自己的自定义来个性化自己的emacs

" 0 1 (yank-handler (evil-yank-line-handler) fontified t face markdown-list-face) 1 53 (yank-handler (evil-yank-line-handler) fontified t) 53 54 (yank-handler (evil-yank-line-handler) fontified t) 54 55 (yank-handler (evil-yank-line-handler) fontified t face markdown-list-face) 55 128 (yank-handler (evil-yank-line-handler) fontified t) 128 129 (yank-handler (evil-yank-line-handler) fontified t)) #("
" 0 1 (yank-handler (evil-yank-line-handler) fontified t font-lock-multiline t face markdown-pre-face)) #("	  - 在没有.emacs文件的情况下，这些配置就写在init.el文件里面
	  - 这个library通过如下代码表示自己提供的功能
" 0 3 (yank-handler (evil-yank-line-handler) fontified t) 3 4 (yank-handler (evil-yank-line-handler) fontified t face markdown-list-face) 4 39 (yank-handler (evil-yank-line-handler) fontified t) 39 40 (yank-handler (evil-yank-line-handler) fontified t) 40 43 (yank-handler (evil-yank-line-handler) fontified t) 43 44 (yank-handler (evil-yank-line-handler) fontified t face markdown-list-face) 44 70 (yank-handler (evil-yank-line-handler) fontified t)) #("	  <!-- - 在没有.emacs文件的情况下，这些配置就写在init.el文件里面 -->
" 0 3 (yank-handler (evil-yank-line-handler) fontified t) 3 8 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 8 9 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 9 44 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 44 48 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 48 49 (yank-handler (evil-yank-line-handler) fontified t)) #("	  - 在没有.emacs文件的情况下，这些配置就写在init.el文件里面
" 0 3 (yank-handler (evil-yank-line-handler) fontified t) 3 4 (yank-handler (evil-yank-line-handler) fontified t face markdown-list-face) 4 39 (yank-handler (evil-yank-line-handler) fontified t) 39 40 (yank-handler (evil-yank-line-handler) fontified t)) #("	  <!-- - 在没有.emacs文件的情况下，这些配置就写在init.el文件里面 -->
" 0 3 (yank-handler (evil-yank-line-handler) fontified t) 3 8 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 8 9 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 9 44 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 44 48 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 48 49 (yank-handler (evil-yank-line-handler) fontified t)) #("	  - 在没有.emacs文件的情况下，这些配置就写在init.el文件里面
" 0 3 (yank-handler (evil-yank-line-handler) fontified t) 3 4 (yank-handler (evil-yank-line-handler) fontified t face markdown-list-face) 4 39 (yank-handler (evil-yank-line-handler) fontified t) 39 40 (yank-handler (evil-yank-line-handler) fontified t)) #("	  <!-- - 在没有.emacs文件的情况下，这些配置就写在init.el文件里面 -->
" 0 3 (yank-handler (evil-yank-line-handler) fontified t) 3 8 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 8 9 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 9 44 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 44 48 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 48 49 (yank-handler (evil-yank-line-handler) fontified t)) #("	  - 在没有.emacs文件的情况下，这些配置就写在init.el文件里面
" 0 3 (yank-handler (evil-yank-line-handler) fontified t) 3 4 (yank-handler (evil-yank-line-handler) fontified t face markdown-list-face) 4 40 (yank-handler (evil-yank-line-handler) fontified t)) #("t" 0 1 (fontified t)) #("ide那样的提
" 0 8 (yank-handler (evil-yank-line-handler) fontified t)) #("醒" 0 1 (fontified t)) "" #("
" 0 1 (yank-handler (evil-yank-line-handler))) #("
" 0 1 (yank-handler (evil-yank-line-handler))) "" "" "m" "
" #("    printf(\"hahahah~~~~~~~~~~~~~a" 0 4 (fontified t) 4 10 (fontified t) 10 11 (fontified t) 11 12 (face font-lock-warning-face fontified t) 12 33 (face font-lock-string-face fontified t)) #("
" 0 1 (face font-lock-string-face fontified t)) "按下逗号" #("  <!-- - window-number.el：这个插件是指在同一个标签下，被分隔成不同的窗口，然后在写窗口界面进行切换，比如开启了终端机的窗口，然后就可以不用按下exit退出终端模式，而是直接就可以在map模式直接通过逗号加数字的形式来进行界面的跳转 -->
" 0 2 (yank-handler (evil-yank-line-handler) fontified t) 2 7 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 7 8 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 8 9 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 9 14 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 14 126 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 126 127 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 127 128 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 128 132 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 132 133 (yank-handler (evil-yank-line-handler) fontified t)) #("  - window-number.el：这个插件是指在同一个标签下，被分隔成不同的窗口，然后在写窗口界面进行切换，比如开启了终端机的窗口，然后就可以不用按下exit退出终端模式，而是直接就可以在map模式直接通过逗号加数字的形式来进行界面的跳转
" 0 2 (yank-handler (evil-yank-line-handler) fontified t) 2 3 (yank-handler (evil-yank-line-handler) fontified t face markdown-list-face) 3 4 (yank-handler (evil-yank-line-handler) fontified t) 4 9 (yank-handler (evil-yank-line-handler) fontified t) 9 121 (yank-handler (evil-yank-line-handler) fontified t) 121 122 (yank-handler (evil-yank-line-handler) fontified t) 122 123 (yank-handler (evil-yank-line-handler) fontified t) 123 124 (yank-handler (evil-yank-line-handler) fontified t)) #("  <!-- - window-number.el：这个插件是指在同一个标签下，被分隔成不同的窗口，然后在写窗口界面进行切换，比如开启了终端机的窗口，然后就可以不用按下exit退出终端模式，而是直接就可以在map模式直接通过逗号加数字的形式来进行界面的跳转 -->
" 0 2 (yank-handler (evil-yank-line-handler) fontified t) 2 7 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 7 8 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 8 9 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 9 14 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 14 126 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 126 127 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 127 128 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 128 132 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 132 133 (yank-handler (evil-yank-line-handler) fontified t)) #("  - window-number.el：这个插件是指在同一个标签下，被分隔成不同的窗口，然后在写窗口界面进行切换，比如开启了终端机的窗口，然后就可以不用按下exit退出终端模式，而是直接就可以在map模式直接通过逗号加数字的形式来进行界面的跳转
" 0 2 (yank-handler (evil-yank-line-handler) fontified t) 2 3 (yank-handler (evil-yank-line-handler) fontified t face markdown-list-face) 3 4 (yank-handler (evil-yank-line-handler) fontified t) 4 9 (yank-handler (evil-yank-line-handler) fontified t) 9 121 (yank-handler (evil-yank-line-handler) fontified t) 121 122 (yank-handler (evil-yank-line-handler) fontified t) 122 123 (yank-handler (evil-yank-line-handler) fontified t) 123 124 (yank-handler (evil-yank-line-handler) fontified t)) #("  <!-- - window-number.el：这个插件是指在同一个标签下，被分隔成不同的窗口，然后在写窗口界面进行切换，比如开启了终端机的窗口，然后就可以不用按下exit退出终端模式，而是直接就可以在map模式直接通过逗号加数字的形式来进行界面的跳转 -->
" 0 2 (yank-handler (evil-yank-line-handler) fontified t) 2 7 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 7 8 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 8 9 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 9 14 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 14 126 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 126 127 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 127 128 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 128 132 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 132 133 (yank-handler (evil-yank-line-handler) fontified t)) #("  - window-number.el：这个插件是指在同一个标签下，被分隔成不同的窗口，然后在写窗口界面进行切换，比如开启了终端机的窗口，然后就可以不用按下exit退出终端模式，而是直接就可以在map模式直接通过逗号加数字的形式来进行界面的跳转
" 0 2 (yank-handler (evil-yank-line-handler) fontified t) 2 3 (yank-handler (evil-yank-line-handler) fontified t face markdown-list-face) 3 4 (yank-handler (evil-yank-line-handler) fontified t) 4 9 (yank-handler (evil-yank-line-handler) fontified t) 9 121 (yank-handler (evil-yank-line-handler) fontified t) 121 122 (yank-handler (evil-yank-line-handler) fontified t) 122 123 (yank-handler (evil-yank-line-handler) fontified t) 123 124 (yank-handler (evil-yank-line-handler) fontified t)) #("  <!-- - window-number.el：这个插件是指在同一个标签下，被分隔成不同的窗口，然后在写窗口界面进行切换，比如开启了终端机的窗口，然后就可以不用按下exit退出终端模式，而是直接就可以在map模式直接通过逗号加数字的形式来进行界面的跳转 -->
" 0 2 (yank-handler (evil-yank-line-handler) fontified t) 2 7 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 7 8 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 8 9 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 9 14 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 14 126 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 126 127 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 127 128 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 128 132 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 132 133 (yank-handler (evil-yank-line-handler) fontified t)) #("  - window-number.el：这个插件是指在同一个标签下，被分隔成不同的窗口，然后在写窗口界面进行切换，比如开启了终端机的窗口，然后就可以不用按下exit退出终端模式，而是直接就可以在map模式直接通过逗号加数字的形式来进行界面的跳转
" 0 2 (yank-handler (evil-yank-line-handler) fontified t) 2 3 (yank-handler (evil-yank-line-handler) fontified t face markdown-list-face) 3 4 (yank-handler (evil-yank-line-handler) fontified t) 4 9 (yank-handler (evil-yank-line-handler) fontified t) 9 121 (yank-handler (evil-yank-line-handler) fontified t) 121 122 (yank-handler (evil-yank-line-handler) fontified t) 122 123 (yank-handler (evil-yank-line-handler) fontified t) 123 124 (yank-handler (evil-yank-line-handler) fontified t)) #("  <!-- - window-number.el：这个插件是指在同一个标签下，被分隔成不同的窗口，然后在写窗口界面进行切换，比如开启了终端机的窗口，然后就可以不用按下exit退出终端模式，而是直接就可以在map模式直接通过逗号加数字的形式来进行界面的跳转 -->
" 0 2 (yank-handler (evil-yank-line-handler) fontified t) 2 7 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 7 8 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 8 9 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 9 14 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 14 126 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 126 127 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 127 128 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 128 132 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 132 133 (yank-handler (evil-yank-line-handler) fontified t)) #("  - window-number.el：这个插件是指在同一个标签下，被分隔成不同的窗口，然后在写窗口界面进行切换，比如开启了终端机的窗口，然后就可以不用按下exit退出终端模式，而是直接就可以在map模式直接通过逗号加数字的形式来进行界面的跳转
" 0 2 (yank-handler (evil-yank-line-handler) fontified t) 2 3 (yank-handler (evil-yank-line-handler) fontified t face markdown-list-face) 3 4 (yank-handler (evil-yank-line-handler) fontified t) 4 9 (yank-handler (evil-yank-line-handler) fontified t) 9 121 (yank-handler (evil-yank-line-handler) fontified t) 121 122 (yank-handler (evil-yank-line-handler) fontified t) 122 123 (yank-handler (evil-yank-line-handler) fontified t) 123 124 (yank-handler (evil-yank-line-handler) fontified t)) #("  <!-- - window-number.el：这个插件是指在同一个标签下，被分隔成不同的窗口，然后在写窗口界面进行切换，比如开启了终端机的窗口，然后就可以不用按下exit退出终端模式，而是直接就可以在map模式直接通过逗号加数字的形式来进行界面的跳转 -->
" 0 2 (yank-handler (evil-yank-line-handler) fontified t) 2 7 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 7 8 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 8 9 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 9 14 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 14 126 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 126 127 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 127 128 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 128 132 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 132 133 (yank-handler (evil-yank-line-handler) fontified t)) #("  - window-number.el：这个插件是指在同一个标签下，被分隔成不同的窗口，然后在写窗口界面进行切换，比如开启了终端机的窗口，然后就可以不用按下exit退出终端模式，而是直接就可以在map模式直接通过逗号加数字的形式来进行界面的跳转
" 0 2 (yank-handler (evil-yank-line-handler) fontified t) 2 3 (yank-handler (evil-yank-line-handler) fontified t face markdown-list-face) 3 4 (yank-handler (evil-yank-line-handler) fontified t) 4 9 (yank-handler (evil-yank-line-handler) fontified t) 9 121 (yank-handler (evil-yank-line-handler) fontified t) 121 122 (yank-handler (evil-yank-line-handler) fontified t) 122 123 (yank-handler (evil-yank-line-handler) fontified t) 123 124 (yank-handler (evil-yank-line-handler) fontified t)) #("  <!-- - window-number.el：这个插件是指在同一个标签下，被分隔成不同的窗口，然后在写窗口界面进行切换，比如开启了终端机的窗口，然后就可以不用按下exit退出终端模式，而是直接就可以在map模式直接通过逗号加数字的形式来进行界面的跳转 -->
" 0 2 (yank-handler (evil-yank-line-handler) fontified t) 2 7 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 7 8 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 8 9 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 9 14 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 14 126 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 126 127 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 127 128 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 128 132 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 132 133 (yank-handler (evil-yank-line-handler) fontified t)) #("  - window-number.el：这个插件是指在同一个标签下，被分隔成不同的窗口，然后在写窗口界面进行切换，比如开启了终端机的窗口，然后就可以不用按下exit退出终端模式，而是直接就可以在map模式直接通过逗号加数字的形式来进行界面的跳转
" 0 2 (yank-handler (evil-yank-line-handler) fontified t) 2 3 (yank-handler (evil-yank-line-handler) fontified t face markdown-list-face) 3 4 (yank-handler (evil-yank-line-handler) fontified t) 4 9 (yank-handler (evil-yank-line-handler) fontified t) 9 121 (yank-handler (evil-yank-line-handler) fontified t) 121 122 (yank-handler (evil-yank-line-handler) fontified t) 122 123 (yank-handler (evil-yank-line-handler) fontified t) 123 124 (yank-handler (evil-yank-line-handler) fontified t)) #("  <!-- - window-number.el：这个插件是指在同一个标签下，被分隔成不同的窗口，然后在写窗口界面进行切换，比如开启了终端机的窗口，然后就可以不用按下exit退出终端模式，而是直接就可以在map模式直接通过逗号加数字的形式来进行界面的跳转 -->
" 0 2 (yank-handler (evil-yank-line-handler) fontified t) 2 7 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 7 8 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 8 9 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 9 14 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 14 126 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 126 127 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 127 128 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 128 132 (yank-handler (evil-yank-line-handler) fontified t face markdown-comment-face) 132 133 (yank-handler (evil-yank-line-handler) fontified t)) #("  - window-number.el：这个插件是指在同一个标签下，被分隔成不同的窗口，然后在写窗口界面进行切换，比如开启了终端机的窗口，然后就可以不用按下exit退出终端模式，而是直接就可以在map模式直接通过逗号加数字的形式来进行界面的跳转
" 0 2 (yank-handler (evil-yank-line-handler) fontified t) 2 3 (yank-handler (evil-yank-line-handler) fontified t face markdown-list-face) 3 4 (yank-handler (evil-yank-line-handler) fontified t) 4 9 (yank-handler (evil-yank-line-handler) fontified t) 9 121 (yank-handler (evil-yank-line-handler) fontified t) 121 122 (yank-handler (evil-yank-line-handler) fontified t) 122 123 (yank-handler (evil-yank-line-handler) fontified t) 123 124 (yank-handler (evil-yank-line-handler) fontified t)) #("转" 0 1 (fontified t)) #("  - window-number.el：这个插件是指在同一个标签下，被分隔成不同的窗口，然后在写窗口界面进行切换，比如开启了终端机的窗口，然后就可以不用按下exit退出终端模式，而是直接就可以在map模式直接通过逗号加数字的形式来进行界面的
" 0 2 (yank-handler (evil-yank-line-handler) fontified t) 2 3 (yank-handler (evil-yank-line-handler) fontified t face markdown-list-face) 3 4 (yank-handler (evil-yank-line-handler) fontified t) 4 9 (yank-handler (evil-yank-line-handler) fontified t) 9 122 (yank-handler (evil-yank-line-handler) fontified t)) #("跳" 0 1 (fontified t)) #("转" 0 1 (fontified t)) #("windo" 0 5 (fontified t)) "" #(";;非常不错的配置文件，没有颜色主题的错误，非常的好用，而且配置很对我的胃口
" 0 2 (face font-lock-comment-delimiter-face fontified t yank-handler (evil-yank-line-handler)) 2 39 (face font-lock-comment-face fontified t yank-handler (evil-yank-line-handler))) #(";;现在打算用这个配置作为蓝本进行修改与优化
" 0 2 (face font-lock-comment-delimiter-face fontified t yank-handler (evil-yank-line-handler)) 2 23 (face font-lock-comment-face fontified t yank-handler (evil-yank-line-handler))) #(";;要加入的又auto-complete，auto-complete-clang，tabbar-mode，flycheck，multi-term等插件，这几个是一定要安装的，另外键盘的映射自己要根据最开始的配置进行调整一下才可dd以
" 0 2 (face font-lock-comment-delimiter-face fontified t yank-handler (evil-yank-line-handler)) 2 116 (face font-lock-comment-face fontified t yank-handler (evil-yank-line-handler)) 116 117 (face font-lock-comment-face fontified t yank-handler (evil-yank-line-handler))) #("# include<stdio.h>
" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face category c-cpp-delimiter yank-handler (evil-yank-line-handler)) 1 9 (c-in-sws t fontified t face font-lock-preprocessor-face yank-handler (evil-yank-line-handler)) 9 18 (c-in-sws t fontified t face font-lock-string-face yank-handler (evil-yank-line-handler)) 18 19 (yank-handler (evil-yank-line-handler))) #("
int main()
" 0 1 (c-in-sws t c-is-sws t fontified t yank-handler (evil-yank-line-handler)) 1 2 (c-is-sws t fontified t face font-lock-type-face yank-handler (evil-yank-line-handler)) 2 3 (fontified t face font-lock-type-face yank-handler (evil-yank-line-handler)) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face yank-handler (evil-yank-line-handler)) 4 5 (fontified t yank-handler (evil-yank-line-handler)) 5 9 (fontified t face font-lock-function-name-face yank-handler (evil-yank-line-handler)) 9 10 (fontified t yank-handler (evil-yank-line-handler)) 10 11 (fontified t yank-handler (evil-yank-line-handler)) 11 12 (yank-handler (evil-yank-line-handler)))))
