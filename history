;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(evil-ex-history ido-buffer-history ido-file-history))
(setq evil-ex-history '(#(";非常不错的配置文件，没有颜色主题的错误，非常的好用，而且配置很对我的胃口" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29) 29 30 (ex-index 30) 30 31 (ex-index 31) 31 32 (ex-index 32) 32 33 (ex-index 33) 33 34 (ex-index 34) 34 35 (ex-index 35) 35 36 (ex-index 36) 36 37 (ex-index 37))))
(setq ido-buffer-history '("Emacs.md" "Thinking.md" "Task.md" "Vim.md" "test.c" "init.el" "Vim.md" "Task.md" "*eshell*"))
(setq ido-file-history '("init.el" "test.c" "Vim.md" "Task.md" "Thinking.md" "Task.md" "test.c"))
(setq search-ring 'nil)
(setq regexp-search-ring 'nil)
(setq kill-ring '(#(";;非常不错的配置文件，没有颜色主题的错误，非常的好用，而且配置很对我的胃口
" 0 2 (face font-lock-comment-delimiter-face fontified t yank-handler (evil-yank-line-handler)) 2 39 (face font-lock-comment-face fontified t yank-handler (evil-yank-line-handler))) #(";;现在打算用这个配置作为蓝本进行修改与优化
" 0 2 (face font-lock-comment-delimiter-face fontified t yank-handler (evil-yank-line-handler)) 2 23 (face font-lock-comment-face fontified t yank-handler (evil-yank-line-handler))) #(";;要加入的又auto-complete，auto-complete-clang，tabbar-mode，flycheck，multi-term等插件，这几个是一定要安装的，另外键盘的映射自己要根据最开始的配置进行调整一下才可dd以
" 0 2 (face font-lock-comment-delimiter-face fontified t yank-handler (evil-yank-line-handler)) 2 116 (face font-lock-comment-face fontified t yank-handler (evil-yank-line-handler)) 116 117 (face font-lock-comment-face fontified t yank-handler (evil-yank-line-handler))) #("# include<stdio.h>
" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face category c-cpp-delimiter yank-handler (evil-yank-line-handler)) 1 9 (c-in-sws t fontified t face font-lock-preprocessor-face yank-handler (evil-yank-line-handler)) 9 18 (c-in-sws t fontified t face font-lock-string-face yank-handler (evil-yank-line-handler)) 18 19 (yank-handler (evil-yank-line-handler))) #("
int main()
" 0 1 (c-in-sws t c-is-sws t fontified t yank-handler (evil-yank-line-handler)) 1 2 (c-is-sws t fontified t face font-lock-type-face yank-handler (evil-yank-line-handler)) 2 3 (fontified t face font-lock-type-face yank-handler (evil-yank-line-handler)) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face yank-handler (evil-yank-line-handler)) 4 5 (fontified t yank-handler (evil-yank-line-handler)) 5 9 (fontified t face font-lock-function-name-face yank-handler (evil-yank-line-handler)) 9 10 (fontified t yank-handler (evil-yank-line-handler)) 10 11 (fontified t yank-handler (evil-yank-line-handler)) 11 12 (yank-handler (evil-yank-line-handler))) #("  retu
" 0 2 (fontified t yank-handler (evil-yank-line-handler)) 2 6 (fontified t yank-handler (evil-yank-line-handler)) 6 7 (yank-handler (evil-yank-line-handler))) "" "" #("
" 0 1 (fontified t yank-handler (evil-yank-line-handler))) #("t" 0 1 (face markdown-metadata-key-face fontified t))))
