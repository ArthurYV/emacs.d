;;; Automatically generated on Fri May  1 01:37:47 2015
;;; Invoked by huifengshuma@huifengshuma.local using 24.5.1
(setq-default session-file-alist '(("~/Documents/My-wiki-baby/source/_posts/Emacs.md" 9620 9040 1 nil nil 9621 (overwrite-mode)) ("~/Documents/org-doc/test.c" 32 30 1 nil nil 32 (overwrite-mode)) ("~/.w3m/bookmark.html" 147 146 1 nil nil 147 (overwrite-mode)) ("~/.emacs.d/init.el" 26 nil 1 nil nil 1 (overwrite-mode)) ("~/Documents/My-wiki-baby/source/_posts/Thinking.md" 6747 nil 1 nil nil 6746 (overwrite-mode)) ("~/Documents/My-wiki-baby/source/_posts/Task.md" 444 nil 1 nil nil 98 (overwrite-mode))))
(setq-default file-name-history '("/Users/huifengshuma/Documents/org-doc/.emacs" "~/.w3m/bookmark.html" "~/Documents/org-doc/test.c" "/Users/huifengshuma/Documents/My-wiki-baby/source/_posts/Thinking.md" "/Users/huifengshuma/Documents/My-wiki-baby/source/_posts/Task.md" "/Users/huifengshuma/.emacs.d/init.el" "~/Documents/My-wiki-baby/source/_posts/Emacs.md" "~/Documents/My-wiki-baby/source/_posts/Thinking.md" "/Users/huifengshuma/Documents/org-doc/test.c" "/Users/huifengshuma/Documents/My-wiki-baby/source/_posts/Vim.md" "~/Documents/My-wiki-baby/source/_posts/Task.md" "~/.emacs.d/org-clock-save.el" "~/.emacs.d/elpa/org-pomodoro-20150331.1023/org-pomodoro-autoloads.el" "~/.emacs.d/elpa/org-mac-iCal-20140107.519/org-mac-iCal-autoloads.el" "~/.emacs.d/elpa/org-mac-link-20141015.608/org-mac-link-autoloads.el" "~/.emacs.d/elpa/org-fstree-20090723.819/org-fstree-autoloads.el" "~/.emacs.d/elpa/smarty-mode-20100703.458/smarty-mode-autoloads.el" "~/.emacs.d/elpa/php-mode-20150414.707/php-mode-autoloads.el" "~/.emacs.d/elpa/rainbow-delimiters-20150320.17/rainbow-delimiters-autoloads.el" "~/.emacs.d/elpa/js-comint-20080530.757/js-comint-autoloads.el" "~/.emacs.d/elpa/coffee-mode-20150318.1623/coffee-mode-autoloads.el" "~/.emacs.d/elpa/ac-js2-20140906.442/ac-js2-autoloads.el" "~/.emacs.d/elpa/skewer-mode-20150422.1818/skewer-mode-autoloads.el" "~/.emacs.d/elpa/simple-httpd-20150422.1825/simple-httpd-autoloads.el" "~/.emacs.d/elpa/js2-mode-20150423.1929/js2-mode-autoloads.el" "~/.emacs.d/elpa/json-mode-20150413.1948/json-mode-autoloads.el" "~/.emacs.d/elpa/json-reformat-20150406.1705/json-reformat-autoloads.el" "~/.emacs.d/elpa/json-snatcher-20140527.2147/json-snatcher-autoloads.el" "~/.emacs.d/elpa/erlang-20150319.456/erlang-autoloads.el" "~/.emacs.d/elpa/csv-nav-20130407.1820/csv-nav-autoloads.el" "~/.emacs.d/elpa/csv-mode-1.3/csv-mode-autoloads.el" "~/.emacs.d/elpa/markdown-mode-20150121.1229/markdown-mode-autoloads.el" "~/.emacs.d/elpa/textile-mode-20120721.1258/textile-mode-autoloads.el" "~/.emacs.d/elpa/crontab-mode-20090510.1355/crontab-mode-autoloads.el" "~/.emacs.d/elpa/alert-20150402.1246/alert-autoloads.el" "~/.emacs.d/elpa/gntp-20141024.1950/gntp-autoloads.el" "~/.emacs.d/elpa/log4e-20150105.505/log4e-autoloads.el" "~/.emacs.d/elpa/magit-gh-pulls-20150328.2353/magit-gh-pulls-autoloads.el" "~/.emacs.d/elpa/github-clone-20141006.210/github-clone-autoloads.el" "~/.emacs.d/elpa/gh-20150126.1125/gh-autoloads.el" "~/.emacs.d/elpa/pcache-20150125.1653/pcache-autoloads.el" "~/.emacs.d/elpa/logito-20120225.1255/logito-autoloads.el" "~/.emacs.d/elpa/bug-reference-github-20131202.1303/bug-reference-github-autoloads.el" "~/.emacs.d/elpa/github-browse-file-20150411.1223/github-browse-file-autoloads.el" "~/.emacs.d/elpa/yagist-20150425.551/yagist-autoloads.el" "~/.emacs.d/elpa/magit-svn-20150319.1355/magit-svn-autoloads.el" "~/.emacs.d/elpa/git-timemachine-20150427.2316/git-timemachine-autoloads.el" "~/.emacs.d/elpa/git-messenger-20150314.602/git-messenger-autoloads.el" "~/.emacs.d/elpa/gitconfig-mode-20150405.1627/gitconfig-mode-autoloads.el" "~/.emacs.d/elpa/gitignore-mode-20150405.1627/gitignore-mode-autoloads.el" "~/.emacs.d/elpa/git-blame-20110509.926/git-blame-autoloads.el" "~/.emacs.d/elpa/magit-20150424.1706/magit-autoloads.el" "~/.emacs.d/elpa/git-commit-mode-20150330.1048/git-commit-mode-autoloads.el" "~/.emacs.d/elpa/git-rebase-mode-20150122.1114/git-rebase-mode-autoloads.el" "~/.emacs.d/elpa/vc-darcs-20141122.1326/vc-darcs-autoloads.el" "~/.emacs.d/elpa/darcsum-20140315.2110/darcsum-autoloads.el" "~/.emacs.d/elpa/guide-key-20150107.2235/guide-key-autoloads.el" "~/.emacs.d/elpa/popwin-20150315.600/popwin-autoloads.el" "~/.emacs.d/elpa/s-20140910.334/s-autoloads.el" "~/.emacs.d/elpa/highlight-escape-sequences-20130531.1512/highlight-escape-sequences-autoloads.el" "~/.emacs.d/elpa/whole-line-or-region-20110901.130/whole-line-or-region-autoloads.el" "~/.emacs.d/elpa/move-dup-20140925.808/move-dup-autoloads.el" "~/.emacs.d/elpa/fill-column-indicator-20140509.1101/fill-column-indicator-autoloads.el" "~/.emacs.d/elpa/page-break-lines-20150226.817/page-break-lines-autoloads.el" "~/.emacs.d/elpa/multiple-cursors-20150307.2322/multiple-cursors-autoloads.el" "~/.emacs.d/elpa/ace-jump-mode-20140616.115/ace-jump-mode-autoloads.el" "~/.emacs.d/elpa/expand-region-20150414.908/expand-region-autoloads.el" "~/.emacs.d/elpa/browse-kill-ring-20150104.1237/browse-kill-ring-autoloads.el" "~/.emacs.d/elpa/highlight-symbol-20150422.1202/highlight-symbol-autoloads.el" "~/.emacs.d/elpa/undo-tree-20140509.522/undo-tree-autoloads.el" "~/.emacs.d/elpa/whitespace-cleanup-mode-20150214.353/whitespace-cleanup-mode-autoloads.el" "~/.emacs.d/elpa/unfill-20131103.213/unfill-autoloads.el" "~/.emacs.d/elpa/mmm-mode-20150325.15/mmm-mode-autoloads.el" "~/.emacs.d/elpa/default-text-scale-20150227.956/default-text-scale-autoloads.el" "~/.emacs.d/elpa/session-20120510.1700/session-autoloads.el" "~/.emacs.d/elpa/switch-window-20150114.215/switch-window-autoloads.el" "~/.emacs.d/elpa/auto-complete-20150408.1132/auto-complete-autoloads.el" "~/.emacs.d/elpa/popup-20150315.612/popup-autoloads.el" "~/.emacs.d/elpa/idomenu-20141123.1320/idomenu-autoloads.el" "~/.emacs.d/elpa/smex-20141210.1422/smex-autoloads.el" "~/.emacs.d/elpa/ido-ubiquitous-20150423.1037/ido-ubiquitous-autoloads.el" "~/.emacs.d/elpa/ido-completing-read+-20150423.1037/ido-completing-read+-autoloads.el"))
(setq-default search-ring '("配置"))
(setq-default buffer-name-history '(".emacs" "*terminal<1>*" "*eshell*" "*Packages*" "*w3m*" "bookmark.html" "Emacs.md" "Task.md" "Thinking.md" "init.el" "Vim.md" "test.c"))
(setq-default evil-ex-history '(#(";非常不错的配置文件，没有颜色主题的错误，非常的好用，而且配置很对我的胃口" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29) 29 30 (ex-index 30) 30 31 (ex-index 31) 31 32 (ex-index 32) 32 33 (ex-index 33) 33 34 (ex-index 34) 34 35 (ex-index 35) 35 36 (ex-index 36) 36 37 (ex-index 37))))
(setq-default extended-command-history '("multi-term-dedicated-open" "eshell" "w3m"))
(setq-default helm-c-source-complex-command-history '((name . "Complex Command History") (candidates lambda nil (cl-loop for i in command-history unless ... collect ...)) (type . sexp)))
(setq-default helm-c-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (persistent-action . ignore) (filtered-candidate-transformer . helm-file-name-history-transformer) (action ("Find file" . helm-find-many-files) ("Find file as root" . helm-find-file-as-root) ("Find file other window" . find-file-other-window) ("Find file other frame" . find-file-other-frame) ("Open dired in file's directory" . helm-open-dired) ("Grep File(s) `C-u recurse'" . helm-find-files-grep) ("Zgrep File(s) `C-u Recurse'" . helm-ff-zgrep) ("Pdfgrep File(s)" . helm-ff-pdfgrep) ("Insert as org link" . helm-files-insert-as-org-link) ("Checksum File" . helm-ff-checksum) ("Ediff File" . helm-find-files-ediff-files) ("Ediff Merge File" . helm-find-files-ediff-merge-files) ("Etags `M-., C-u tap, C-u C-u reload tag file'" . helm-ff-etags-select) ("View file" . view-file) ("Insert file" . insert-file) ("Add marked files to file-cache" . helm-ff-cache-add-file) ("Delete file(s)" . helm-delete-marked-files) ("Open file externally (C-u to choose)" . helm-open-file-externally) ("Open file with default tool" . helm-open-file-with-default-tool) ("Find file in hex dump" . hexl-find-file))))
(setq-default helm-source-complex-command-history '((name . "Complex Command History") (candidates lambda nil (cl-loop for i in command-history unless ... collect ...)) (type . sexp)))
(setq-default helm-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (persistent-action . ignore) (filtered-candidate-transformer . helm-file-name-history-transformer) (action ("Find file" . helm-find-many-files) ("Find file as root" . helm-find-file-as-root) ("Find file other window" . find-file-other-window) ("Find file other frame" . find-file-other-frame) ("Open dired in file's directory" . helm-open-dired) ("Grep File(s) `C-u recurse'" . helm-find-files-grep) ("Zgrep File(s) `C-u Recurse'" . helm-ff-zgrep) ("Pdfgrep File(s)" . helm-ff-pdfgrep) ("Insert as org link" . helm-files-insert-as-org-link) ("Checksum File" . helm-ff-checksum) ("Ediff File" . helm-find-files-ediff-files) ("Ediff Merge File" . helm-find-files-ediff-merge-files) ("Etags `M-., C-u tap, C-u C-u reload tag file'" . helm-ff-etags-select) ("View file" . view-file) ("Insert file" . insert-file) ("Add marked files to file-cache" . helm-ff-cache-add-file) ("Delete file(s)" . helm-delete-marked-files) ("Open file externally (C-u to choose)" . helm-open-file-externally) ("Open file with default tool" . helm-open-file-with-default-tool) ("Find file in hex dump" . hexl-find-file))))
(setq-default ido-buffer-history '(".emacs" "*terminal<1>*" "*eshell*" "*Packages*" "*w3m*" "bookmark.html" "Emacs.md" "test.c" "Task.md" "Thinking.md" "init.el" "Vim.md"))
(setq-default ido-file-history '(".emacs" "Thinking.md" "Task.md" "init.el" "test.c" "Vim.md"))
(setq-default minibuffer-history '(#("使用org-mode做个人管理" 0 15 (fontified t)) "multi" "multi-term" #("emacs文件的情况下，这些配置就写在init" 0 23 (fontified t)) "list-packages" "如何搜索响应的配置文件，敢接快要烦死了" "百度一下方法" "知乎" "dsd" "ds" "ss" "http://www.baidu.com" "baidu" #("el：这个插件是指在同一个标签下，被分隔成不同的窗口，然后在写窗口界面进行切换，比如开启了终端机的窗口，然后就可以不用按下exit退出终端模式，而是直接就可以在map模式直接通过逗号加数字的形式来进行界面的跳转" 0 103 (fontified t) 103 104 (fontified t) 104 105 (fontified t)) "w3m" #("在map模式下，按下逗号，再按下m键或者是x键都会有相应的命令提示，想要执行什么命令都可以根据来执行，非常的方便" 0 56 (fontified t)) "es"))
(setq-default occur-collect-regexp-history '("\\1"))
(setq-default serial-name-history '("/dev/ttys0"))
(setq-default serial-speed-history '("9600" "1200" "2400" "4800" "14400" "19200" "28800" "38400" "57600" "115200"))
(setq-default smex-history '(multi-term list-packages w3m ag cd ri 5x5))
(setq-default w3m-bookmark-section-history '("www.baidu.com"))
(setq-default w3m-bookmark-title-history '("www.google.com.au"))
(setq-default w3m-input-url-history '("w3m配置修改" "百度" "www.baidu.com" "http://www.google.com.au/search?q=baidu..."))
